# SpatConv: Protein Interaction Analysis

## 🔍 Algorithm Overview

Protein interactions with molecules—such as other proteins, peptides, or small ligands—play a critical role in biological processes. Aberrant interaction patterns are closely associated with various diseases, including cancer and neurodegenerative disorders. 

This invention proposes an innovative geometric deep learning framework, **SpatConv**, which directly leverages the raw three-dimensional (3D) coordinates of proteins and features extracted from the pre-trained **ProtT5** model as inputs, thereby eliminating the need for any precomputed manual features. 

**SpatConv** constructs local coordinate systems that adhere to SE(3) equivariance, enabling precise mapping of residue distribution and integration of multi-scale protein features. The use of spatial graph convolution techniques facilitates efficient message passing and feature updating.

## 🚀 1. Run Command

To run the SpatConv model, use the following command:

```bash
python SpatConv.py --pdb_file ./spatconv/examples/4CPA_A_l.pdb --feature_file ./spatconv/examples/4CPA_A_l.h5


## 📦 2. Requirements
PDB file: The first input is a PDB file containing protein structure data.

Feature file: The second input is an .h5 feature file, which contains 1024-dimensional features for each amino acid, generated by the pre-trained ProtT5 model.

Note:

If uploading a multi-chain protein, ensure that the sequence of each chain in the PDB file is spliced together to generate a multi-chain sequence pre-training feature (e.g., 6ide_B.h5, 4i8a_AB.h5).

## 🧪 3. Reproduction Process
Follow these steps to reproduce the experiment:

Run CA_SC.py to package the CA and SC position files for each amino acid.

Run fcm.py to generate the local coordinate system for each amino acid and package the projection information.

After obtaining the 1024-dimensional features for each amino acid through the pre-trained language model, run feature.py to perform feature integration.

Finally, run train.py to train the model and make predictions.

## 📂 4. Data Availability
The PDB files for the Protein Stone dataset are publicly available at Zenodo.

The remaining three categories of PDB files used in this study are available in the data directory of the GitHub repository SpatConv.

## ⚙️ 5. Environment Configuration
To set up the environment, use the provided environment.yml file to install the necessary dependencies.

```bash
conda env create -f environment.yml


